        -:    0:Source:employee.cpp
        -:    0:Graph:employee.gcno
        -:    0:Data:employee.gcda
        -:    0:Runs:1
        -:    1:#include<iostream>
        -:    2:#include "employee.h"
        -:    3:
        -:    4:
        2:    5:Employee::Employee(std::string id, std::string name, double salary,
        2:    6:int exp) {
        2:    6-block  0
    $$$$$:    6-block  1
    $$$$$:    6-block  2
        2:    7:    m_empid = id;
        2:    8:    m_name = name;
        2:    8-block  0
        2:    9:    m_salary = salary;
        2:   10:    m_exp = exp;
        2:   11:}
        2:   11-block  0
        -:   12:
        -:   13:
    #####:   14:void Employee::display() {
    #####:   15:    std::cout<<"Printing details of Employee"<<std::endl;
    %%%%%:   15-block  0
    #####:   16:    std::cout<<"Employee id: "<<m_empid<<std::endl;
    #####:   17:    std::cout<<"Employee name: "<<m_name<<std::endl;
    #####:   18:    std::cout<<"Employee salary: "<<m_salary<<std::endl;
    #####:   19:    std::cout<<"Employee experience: "<<m_exp<<std::endl;
    #####:   20:}
        -:   21:
        1:   22:Engineer::Engineer(std::string id, std::string name, double salary,
        1:   23:    int exp,int code):Employee(id, name,salary, exp) {
        1:   23-block  0
        1:   23-block  1
        1:   23-block  2
    $$$$$:   23-block  3
    $$$$$:   23-block  4
    $$$$$:   23-block  5
        1:   24:    m_projCode = code;    
        1:   25:}
        -:   26:
        1:   27:std::string Engineer::getid() {
        1:   28:    return m_empid;
        1:   28-block  0
        -:   29:}
        -:   30:
        1:   31:std::string Engineer::getName() {
        1:   32:    return m_name;
        1:   32-block  0
        -:   33:}
        -:   34:
        1:   35:double Engineer::getSalary() {
        1:   36:    return m_salary;
        1:   36-block  0
        -:   37:}
        -:   38:
        1:   39:int Engineer::getExp() {
        1:   40:    return m_exp;
        1:   40-block  0
        -:   41:}
        -:   42:
        1:   43:int Engineer::getprojectcode() {
        1:   44:    return m_projCode;
        1:   44-block  0
        -:   45:}
        -:   46:
    #####:   47:void Engineer::payroll() {
    #####:   48:    std::cout<<"Engineer Salary is: "<<m_salary<<std::endl;
    %%%%%:   48-block  0
    #####:   49:}
        -:   50:
    #####:   51:void Engineer::appraisal() {
    #####:   52:    std::cout<<m_name<<" Engineer got appaisal."<<std::endl;
    %%%%%:   52-block  0
    #####:   53:}
        -:   54:
    #####:   55:void Engineer::display() {
    #####:   56:    std::cout<<"Printing details of Engineer"<<std::endl;
    %%%%%:   56-block  0
    #####:   57:    std::cout<<"Engineer id: "<<m_empid<<std::endl;
    #####:   58:    std::cout<<"Engineer name: "<<m_name<<std::endl;
    #####:   59:    std::cout<<"Engineer project code: "<<m_projCode<<std::endl;
    #####:   60:    std::cout<<"Engineer salary: "<<m_salary<<std::endl;
    #####:   61:    std::cout<<"Engineer experience: "<<m_exp<<std::endl;
    #####:   62:    std::cout<<"----------------------------------"<<std::endl;
    #####:   63:}
        -:   64:
        1:   65:Manager::Manager(std::string id, std::string name, double salary,int exp,
        1:   66:    int code,int reprtees):Employee(id, name,salary, exp) {
        1:   66-block  0
        1:   66-block  1
        1:   66-block  2
    $$$$$:   66-block  3
    $$$$$:   66-block  4
    $$$$$:   66-block  5
        1:   67:        m_projCode = code;
        1:   68:        m_reportees = reprtees;
        1:   69:}
        -:   70:
    #####:   71:void Manager::payroll() {
    #####:   72:    std::cout<<"Manager Salary is: "<<m_salary<<std::endl;
    %%%%%:   72-block  0
    #####:   73:}
        -:   74:
    #####:   75:void Manager::appraisal() {
    #####:   76:    std::cout<<m_name<<" Manager got appaisal."<<std::endl;
    %%%%%:   76-block  0
    #####:   77:}
        -:   78:
        1:   79:std::string Manager::getid() {
        1:   80:    return m_empid;
        1:   80-block  0
        -:   81:}
        -:   82:
        1:   83:std::string Manager::getName() {
        1:   84:    return m_name;
        1:   84-block  0
        -:   85:}
        -:   86:
        1:   87:double Manager::getSalary() {
        1:   88:    return m_salary;
        1:   88-block  0
        -:   89:}
        -:   90:
        1:   91:int Manager::getExp() {
        1:   92:    return m_exp;
        1:   92-block  0
        -:   93:}
        -:   94:
        1:   95:int Manager::getprojectcode() {
        1:   96:    return m_projCode;
        1:   96-block  0
        -:   97:}
        -:   98:
        1:   99:int Manager::getreportees() {
        1:  100:    return m_reportees;
        1:  100-block  0
        -:  101:}
        -:  102:
    #####:  103:void Manager::display() {
    #####:  104:    std::cout<<"Printing details of Manager"<<std::endl;
    %%%%%:  104-block  0
    #####:  105:    std::cout<<"Manager id: "<<m_empid<<std::endl;
    #####:  106:    std::cout<<"Manager name: "<<m_name<<std::endl;
    #####:  107:    std::cout<<"Manager project code: "<<m_projCode<<std::endl;
    #####:  108:    std::cout<<"Manager salary: "<<m_salary<<std::endl;
    #####:  109:    std::cout<<"Manager experience: "<<m_exp<<std::endl;
    #####:  110:    std::cout<<"----------------------------------"<<std::endl;
    #####:  111:}
